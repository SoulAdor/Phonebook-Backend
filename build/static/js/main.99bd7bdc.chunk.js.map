{"version":3,"sources":["components/PersonsDB.js","components/Input.js","components/ValueInput.js","components/Filter.js","components/Button.js","components/Notification.js","components/ErrorMessage.js","components/PersonForm.js","components/Persons.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","id","put","delete","Input","value","onChange","ValueInput","name","setValue","target","Filter","filter","setFilter","toLowerCase","Button","type","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","style","errorStyle","ErrorMessage","PersonForm","persons","setPersons","useState","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","newPerson","number","onSubmit","event","preventDefault","updatedPerson","find","window","confirm","Database","returnedPerson","map","setTimeout","catch","concat","error","console","log","Person","deletePerson","Persons","filteredPersons","includes","key","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99bd7bdc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = person => {\r\n  return axios.post(baseUrl, person).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  return axios.put(`${baseUrl}/${id}`, person).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Input = ({value, onChange}) => (\r\n  <input value={value} onChange={onChange}/>\r\n)\r\n\r\nexport default Input","import React from 'react'\r\nimport Input from './Input'\r\n\r\nconst ValueInput = ({name, value, setValue}) => (\r\n  <div>\r\n    {`${name}: `}\r\n    <Input value={value} onChange={({target}) => setValue(target.value)}/>\r\n  </div>\r\n)\r\n\r\nexport default ValueInput","import React from 'react'\r\nimport ValueInput from './ValueInput'\r\n\r\nconst Filter = ({filter, setFilter}) => {\r\n  const setLowercaseFilter = value => setFilter(value.toLowerCase())\r\n  return (\r\n    <ValueInput name='Filter shown with' value={filter} setValue={setLowercaseFilter}/>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Button = ({type, name}) => (\r\n  <button type={type}>{name}</button>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst notificationStyle = {\r\n  color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) return null\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst errorStyle = {\r\n  color: 'red',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10\r\n}\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  if (message === null) return null\r\n  return (\r\n    <div style={errorStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import React, {useState} from 'react'\r\nimport Database from './PersonsDB'\r\n\r\nimport ValueInput from './ValueInput'\r\nimport Button from './Button'\r\nimport Notification from './Notification'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nconst PersonForm = ({persons, setPersons}) => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n  const notificationTime = 5000\r\n  const newPerson = {\r\n    name: newName,\r\n    number: newNumber \r\n  }\r\n\r\n  const updateNumber = updatedPerson => {\r\n    if (window.confirm(`${updatedPerson.name} is already added to phonebook, replace the old number with a new one? `) )\r\n      Database.update(updatedPerson.id, newPerson)\r\n        .then((returnedPerson) => {\r\n          setPersons(persons.map (person => person.id === updatedPerson.id ? returnedPerson : person))\r\n          setNotificationMessage (`Updated ${returnedPerson.name}'s number to ${returnedPerson.number}`)\r\n          setTimeout(() => {setNotificationMessage(null)}, notificationTime)\r\n        }\r\n      ).catch(() => {\r\n          setErrorMessage(`Information of '${newName}' has already been removed from server`)\r\n          setTimeout(() => { setErrorMessage(null)}, notificationTime)\r\n        }\r\n      )\r\n  }\r\n\r\n  const addPerson = () => {\r\n    Database.create(newPerson)\r\n      .then(response => \r\n        {\r\n          setPersons(persons.concat (response))\r\n          setNotificationMessage (`Added ${response.name}`)\r\n          setTimeout(() => { setNotificationMessage(null) }, notificationTime)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        console.log(typeof error.response.data)\r\n        console.log(error.response.data)\r\n        //setErrorMessage(error.response.data)\r\n      })  \r\n  }\r\n\r\n  const resetInput = () => \r\n  {\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const tryAddPerson = (event) => {\r\n    event.preventDefault()\r\n    const person = persons.find((person) => person.name === newName) \r\n    person ? updateNumber (person) : addPerson ()\r\n    resetInput ()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={tryAddPerson}> \r\n      <ValueInput name='Name' value={newName} setValue={setNewName}/>\r\n      <ValueInput name='Number' value={newNumber} setValue={setNewNumber}/>\r\n      <Button type=\"submit\" name=\"Add\"/>\r\n      <ErrorMessage message={errorMessage}/>\r\n      <Notification message={notificationMessage}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\nimport Database from './PersonsDB'\r\n\r\nimport Button from './Button'\r\n\r\nconst deletePerson = (event, name, id, persons, setPersons) => {\r\n  event.preventDefault()\r\n  if (window.confirm(`Delete ${name}?`) )\r\n  {\r\n    Database.remove(id)\r\n    setPersons (persons.filter(person => person.id !== id))\r\n  }\r\n}\r\n\r\nconst Person = ({name, number, id, persons, setPersons}) => (\r\n  <li> \r\n    <form onSubmit={event => deletePerson(event, name, id, persons, setPersons)}>\r\n      {`${name} ${number} `} \r\n      <Button type=\"submit\" name=\"Delete\"/>\r\n    </form>\r\n  </li>\r\n)\r\n\r\nconst Persons = ({persons, filter, setPersons}) => {\r\n  const filteredPersons = persons.filter(person => (filter === '') ? true : person.name.toLowerCase().includes(filter)) \r\n  return (\r\n    <ul> {filteredPersons.map (person => <Person key={person.id} id={person.id} name={person.name} number={person.number} persons={persons} setPersons={setPersons}/>)} </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React, { useState, useEffect } from 'react'\r\nimport Database from './PersonsDB'\r\n\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Persons from './Persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ filter, setFilter ] = useState('')\r\n\r\n  useEffect(() => {\r\n    Database.getAll().then(response => setPersons(response))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter filter={filter} setFilter={setFilter}/>\r\n      <h3>Add a new</h3>\r\n      <PersonForm persons={persons} setPersons={setPersons} />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} filter={filter} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}